@using ExaminationSystemTT.DAL.Models
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - ExaminationSystemTT.PL</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/ExaminationSystemTT.PL.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">ExaminationSystemTT.PL</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">

                        @if (User.Identity != null && User.Identity.IsAuthenticated)
                        {
                            // --- Links for Authenticated Users ---

                            @if (User.IsInRole("Admin"))
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a> @* Admins might still need Home *@
                                </li>
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle text-primary fw-bold" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        Admin Menu
                                    </a>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" asp-controller="Course" asp-action="Index">Manage Courses</a></li>
                                        <li><a class="dropdown-item" asp-controller="Instructor" asp-action="Index">Manage Instructors</a></li>
                                        <li><a class="dropdown-item" asp-controller="Student" asp-action="Index">Manage Students</a></li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item" asp-controller="Exam" asp-action="Index">Manage Exams</a></li>
                                        @* Add other admin-specific links here if needed *@
                                    </ul>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                                </li>
                            }
                            else if (User.IsInRole("Instructor"))
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-controller="Exam" asp-action="Index">Manage My Exams</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-controller="Course" asp-action="Index">View Courses</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                                </li>
                            }
                            else if (User.IsInRole("Student"))
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark fw-bold" asp-controller="Dashboard" asp-action="Index">My Dashboard</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                                </li>
                            }
                            else // User is authenticated but has none of the specific roles above
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                                </li>
                            }
                        }
                        else
                        {
                            // --- Links for Non-Authenticated Users ---
                            // If you always start at SignUp/SignIn, maybe remove Home/Privacy here?
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                            </li>
                        }
                    </ul>

                    @* Authentication Status Section *@
                    <ul class="navbar-nav">
                        @if (User.Identity != null && User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                @{
                                    var currentUser = await UserManager.GetUserAsync(User);
                                    var displayName = currentUser?.FName ?? User.Identity.Name; // Use FName or fallback
                                    var rolesString = currentUser != null ? string.Join(", ", await UserManager.GetRolesAsync(currentUser)) : "";
                                }
                                <span class="navbar-text text-dark me-3">
                                    Hello, @displayName! (@rolesString)
                                </span>
                            </li>
                            <li class="nav-item">
                                @* SignOut should be a form for POST method *@
                                <form asp-controller="Account" asp-action="SignOut" method="post" class="d-inline">
                                    <button type="submit" class="nav-link btn btn-link text-dark" style="display: inline; padding-top: 0.5rem; padding-bottom: 0.5rem;">Sign Out</button>
                                </form>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-controller="Account" asp-action="SignUp">Sign Up</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-controller="Account" asp-action="SignIn">Sign In</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @* Display TempData messages if they exist *@
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @if (TempData["WarningMessage"] != null)
            {
                <div class="alert alert-warning alert-dismissible fade show" role="alert">
                    @TempData["WarningMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            © @DateTime.Now.Year - ExaminationSystemTT.PL - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script> @* Ensure this is included for dropdowns *@
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>